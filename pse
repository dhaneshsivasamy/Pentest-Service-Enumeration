#!/bin/bash
#
# Author: Steve Stonebraker
# Github: https://github.com/ssstonebraker/Pentest-Service-Enumeration
# Description: Store/retrieve a list of pentest commands to run against the specified service
#
#
VERSION=0.0.1
####################################
# Exit if program echo does not exist (this allows us to do one line if statements)
[ ! -x "$(which echo)" ] && exit 1
########################################
# pretty printing functions
function print_status { echo -e "\x1B[01;34m[*]\x1B[0m $1"; }
function print_good { echo -e "\x1B[01;32m[*]\x1B[0m $1"; }
function print_error { echo -e "\x1B[01;31m[*]\x1B[0m $1"; }
function print_notification { echo -e "\x1B[01;33m[*]\x1B[0m $1"; }
function print_info { echo -e "\x1B[01;33m[*]\x1B[0m $1"; }
function printline { hr=----------------------------------------------------------------------------------------------------
printf '%s\n' "${hr:0:${COLUMNS:-$(tput cols)}}"
}
####################################
# print message and exit program
function die { print_error "$1" >&2;exit 1; }
######################################## 
SERVICE=$1
FULLCMD=${@:2}
SERVICES="$HOME/.pse"
SERVICEFILE="$HOME/.pse/$SERVICE"
function verify_directory_services_exists {
    # Make sure services directory exists
    if [ -z "$HOME" ]; then
       print_error "\$HOME variable not defined!"
       print_notification "Exiting"
       exit 1
    fi
    if [ ! -d $SERVICES ]; then
      print_notification "$SERVICES not found"
      mkdir $SERVICES && print_good "Created $SERVICES"  
    fi

    [ ! -d $SERVICES ] && print_error "Unable to create directory $SERVICES, exiting" && exit 1
}

function usage1 {
    echo "Pentest Service Enumeration: $VERSION"
    printline
    echo "LISTING EXISTING COMMANDS"
    echo "Usage: pse <service-name> (Ex: ftp, rdp, http)"
    print_info "Examples: "
    print_good "pse ftp"
    print_good "pse rdp"
}

function usage2 {
    printline
    echo "STORING A NEW COMMAND WITH ARGUMENTS"
    echo "Usage: pse <service-name> <command> <arg1> <argX>"
    print_info "Examples:"
    print_good "pse rpcinfo \\\$IP"
    print_good "pse smb smbexec.py \\\$HOST/\\\$USERNAME:\\\$PASSWORD@\\\$IP"
}
function usage  {
    usage1
    usage2
}

function print_service {
    if [ ! -f $SERVICEFILE ]; then
       print_error "Documentation does not exist for $SERVICE, please add some"
       usage2
       printline
       set -o history
       history | grep $SERVICE
       printline
    else
       cat $SERVICEFILE
    fi
}


function add_service {
    [ ! -f $SERVICEFILE ] && touch $SERVICEFILE
    echo ${FULLCMD} >> ${SERVICEFILE}
    echo "Appended service command successfully:"
    tail -n 1 ${SERVICEFILE}
    exit 0
}


# start execution
verify_directory_services_exists
    [ $# -eq 0 ] && usage && usage2 && exit
    [ $# -eq 1 ] && print_service
    [ $# -gt 1 ] && add_service

